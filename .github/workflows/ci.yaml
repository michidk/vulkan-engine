name: Continuous Integration

on: [push, pull_request]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
      - name: Run cargo check (math package)
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: -p math

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Run cargo test (math package)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p math

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets -- -D warnings

  build-linux:
    name: Linux Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Update package index
        run: sudo apt-get update -y
      - name: Install build dependencies
        run: sudo apt-get install -y cmake git ninja-build python python-pip
      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-unknown-linux-gnu
          override: true
      - name: Install ve_shader
        run: cargo install ve_shader
      - name: Build
        run: make build-release-linux
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: Linux Build (x86_64)
          path: ./out

  build-windows:
    name: Windows Build
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-ninja@master
      - uses: actions/setup-python@v2
        with:
          python-version: "2.x"
          architecture: "x64"
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"
          architecture: "x64"
      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-pc-windows-gnu
          override: true
      - name: Install ve_shader
        run: cargo install ve_shader
      - name: Build
        run: make build-release-windows
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: Windows Build (x86_64)
          path: ./out
